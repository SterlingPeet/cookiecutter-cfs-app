.. DO NOT EDIT THIS FILE DIRECTLY!!!  Edit the template in ci/templates/README.rst
.. and then regenerate this file by running the ci/bootstrap.py script.
..

=====================
Cookiecutter: cFS App
=====================

Cookiecutter_ template for a `cFS`_ app, to help with reducing the copy-pasta effect while creating new apps.
There are just enough pieces to remember to change/fix, that it is rather challenging to do without a template.
So here is a template to fill in all the major adjustments, so you can spend time developing an app instead of scratching your head over why you get weird errors.

.. contents:: Table of Contents

Features
--------

* Working app created by running the Cookiecutter_.
* Choice of various licenses.

Requirements
------------

Projects using this template have these minimal dependencies:

* Cookiecutter_ - just for creating the project

Usage and options
-----------------

This template is intended to make it easy to generate all the boilerplate required for a `cFS`_ app.

First navigate to the directory where you want to add your app.
The template is going to create the folder containing your app in the current directory (you should *not* try to create the folder ahead of the template).
Next, generate the app's boilerplate::

  cookiecutter gh:SterlingPeet/cookiecutter-cfs-app

There are a few fields listed at the bottom, preceeded with double underscores.  You will not be asked for these, they will be generated from other responses.  If you feel that you really need to adjust them, they can be set within the ``.cookiecutterrc`` that is generated by the template and re-run according to the instructions in that file.

You will be asked for these fields:

.. list-table::
    :header-rows: 1

    * - Template variable
      - Default
      - Description

    * - ``full_name``
      - .. code:: python

            "Developer Name"

      - Main author of this deployment.

        Can be set in your ``~/.cookiecutterrc`` config file.

    * - ``email``
      - .. code:: python

            "noreply@nospam.com"

      - Contact email of the author.

        Can be set in your ``~/.cookiecutterrc`` config file.

    * - ``app_display_name``
      - .. code:: python

            "My Example"

      - The printed name of this deployment for documentation and strings.  It should be concise and convey the purpose of the deployment.

    * - ``app_readme_title``
      - .. code:: python

            "Core Flight System : Framework : App : My Example"

      - This is how the title of the README file will appear.

    * - ``app_short_description``
      - .. code:: python

            "My Example app for the cFS FSW framework."

      - Short description of the app's purpose.

    * - ``app_slug``
      - .. code:: python

            "MyExample"

      - This is the string that will be used for all app-specific variable names.  It is often 2 or 3 capitol letters.

    * - ``app_repo_base``
      - .. code:: python

            "https://github.com"

      - URL for the service hosting your revision control repo, such as GitHub or GitLab.

    * - ``app_user_org``
      - .. code:: python

            "nasa"

      - Username or Organization that the repository will belong to.

    * - ``app_repo``
      - .. code:: python

            "MyExample"

      - The name of the repository as it will appear in the URL.

    * - ``app_url``
      - .. code:: python

            "https://github.com/nasa/MyExample"

      - The full link to the version control repository.

    * - ``app_include_github_actions``
      - .. code:: python

            "yes"

      - Include the standard cFS github workflows/actions.

    * - ``app_major_version``
      - .. code:: python

            "0"

      - Major version number for the current release.

    * - ``app_minor_version``
      - .. code:: python

            "1"

      - Minor version number for the current release.

    * - ``app_revision``
      - .. code:: python

            "99"

      - Revision number for the current release.  99 means development.

    * - ``app_cmd_mid``
      - .. code:: python

            "0x1882"

      - SB Message ID for incoming commands.  Must be unique to the app within the mission, and in the range 0x18XX.

    * - ``app_send_hk_mid``
      - .. code:: python

            "0x1883"

      - SB Message ID for incoming HK requests.  Must be unique to the app within the mission, and in the range 0x18XX.

    * - ``app_hk_tlm_mid``
      - .. code:: python

            "0x0883"

      - SB Message ID for outgoing HK telemetry.  Must be unique to the app within the mission, and in the range 0x08XX.

    * - ``app_base_perf_id``
      - .. code:: python

            "91"

      - Lowest ID number for performance tracking that belongs to this app.  If you are not using perf, it is safe to ignore this number.

    * - ``library_dep``
      - .. code:: python

            "no"

      - Choose yes for cFS library dependency boilerplate.

    * - ``library_name``
      - .. code:: python

            "sample_lib"

      - Name of the library.

    * - ``library_h_file``
      - .. code:: python

            "sample_lib.h"

      - Header file in the libary containing useful function prototype.

    * - ``library_function``
      - .. code:: python

            "SAMPLE_LIB_Function"

      - Function prototype to add into boilerplate.

    * - ``license``
      - .. code:: python

            "None"

      - License to use. Available options:

        * None (no license text, assume project level license)
        * Apache 2.0 license
        * BSD license
        * MIT license

        What license to pick? https://choosealicense.com/

    * - ``__app_filename_slug``
      - .. code:: python

            "my_example_app"

      - You will not be prompted for this value.

    * - ``__app_slug_uc``
      - .. code:: python

            "MY_EXAMPLE_APP"

      - You will not be prompted for this value.

    * - ``__app_baseline_version``
      - .. code:: python

            "0.1.99"

      - You will not be prompted for this value.

    * - ``__app_build_number``
      - .. code:: python

            "1"

      - You will not be prompted for this value.


You should now have a basic app that can be compiled and run.

From here there are a few more details to complete within your mission code to compile and load the app in cFE/cFS.

1. If needed, Add HK [and possibly WakeUp] MID(s) to Scheduler app's table
2. Add Telemetry MIDs to Telemetry Output's table
3. Add Command MID to Command Ingestor's table
4. Update ``[mission]_defs/target.cmake`` to build the app [APPLIST variable]
5. Add the new app to ``[mission]_defs/cfe_es_startup.scr``

Now you should be able to build and run cFS with this app included!


Changelog
---------

See `CHANGELOG.rst <https://github.com/SterlingPeet/cookiecutter-cfs-app/tree/master/CHANGELOG.rst>`_.

.. _Cookiecutter: https://github.gatech.edu/audreyr/cookiecutter
.. _cFS: https://cfs.gsfc.nasa.gov
.. _slug: https://en.wikipedia.org/wiki/Clean_URL#Slug
